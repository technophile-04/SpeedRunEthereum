import * as React from 'react';
import { DeepPartial } from '../models/utils';
import { SkillGroupData } from '../models';
declare type Props = {
    children: (treeData: SkillGroupData) => React.ReactNode;
} & DeepPartial<typeof defaultProps>;
declare const defaultProps: {
    theme: {
        backgroundColor: string;
        border: string;
        borderRadius: string;
        primaryFont: string;
        primaryFontColor: string;
        treeBackgroundColor: string;
        disabledTreeOpacity: number;
        headingFont: string;
        headingFontColor: string;
        headingFontSize: string;
        headingHoverColor: string;
        headingHoverColorTransition: string;
        tooltipBackgroundColor: string;
        tooltipFontColor: string;
        tooltipZIndex: number;
        nodeBackgroundColor: string;
        nodeBorderColor: string;
        nodeAlternativeFontColor: string;
        nodeAltenativeActiveFontColor: string;
        nodeOverlayColor: string;
        nodeAlternativeActiveBackgroundColor: string;
        nodeActiveBackgroundColor: string;
        nodeHoverBorder: string;
        nodeHoverBorderColor: string;
        nodeIconWidth: string;
        nodeMobileTextNodeHeight: string;
        nodeMobileTextNodeWidth: string;
        nodeMobileFontSize: string;
        nodeDesktopTextNodeHeight: string;
        nodeDesktopTextNodeWidth: string;
        nodeDesktopFontSize: string;
        edgeBorder: string;
    };
};
declare function SkillTreeGroup({ theme, children }: Props): JSX.Element;
declare namespace SkillTreeGroup {
    var defaultProps: {
        theme: {
            backgroundColor: string;
            border: string;
            borderRadius: string;
            primaryFont: string;
            primaryFontColor: string;
            treeBackgroundColor: string;
            disabledTreeOpacity: number;
            headingFont: string;
            headingFontColor: string;
            headingFontSize: string;
            headingHoverColor: string;
            headingHoverColorTransition: string;
            tooltipBackgroundColor: string;
            tooltipFontColor: string;
            tooltipZIndex: number;
            nodeBackgroundColor: string;
            nodeBorderColor: string;
            nodeAlternativeFontColor: string;
            nodeAltenativeActiveFontColor: string;
            nodeOverlayColor: string;
            nodeAlternativeActiveBackgroundColor: string;
            nodeActiveBackgroundColor: string;
            nodeHoverBorder: string;
            nodeHoverBorderColor: string;
            nodeIconWidth: string;
            nodeMobileTextNodeHeight: string;
            nodeMobileTextNodeWidth: string;
            nodeMobileFontSize: string;
            nodeDesktopTextNodeHeight: string;
            nodeDesktopTextNodeWidth: string;
            nodeDesktopFontSize: string;
            edgeBorder: string;
        };
    };
}
export default SkillTreeGroup;
